
/*

JavaScript has 8 Datatypes
String
Number
Bigint
Boolean
Undefined
Null
Symbol
Object

**********************
Temporal DeadZone-
The Temporal Dead Zone (TDZ) is a concept in JavaScript that relates to the hoisting of the variables and the visibility of variables declared with let and const . In the TDZ, a variable exists but it cannot be accessed until it is not declared.

***************function expression

*function definition
*it is also call anonymous function

const sayHi=function()
{
    console.log('Hiii')
}
sayHi()


****************Function declaration
function definition

function sayhi()
{
}

********************
Lexical scope is the ability for a function scope to access variables from the parent scope.

Module scope are available anywhere within the current module, but aren't available from other files or modules.


*******************
A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). In other words, a closure gives you access to an outer function's scope from an inner function.

function init() {
  var name = "Mozilla"; // name is a local variable created by init
  function displayName() {
    displayName() is the inner function, that forms the closure
    console.log(name); // use variable declared in the parent function
  }
  displayName();
}
init();

Note------------------
Event Loop -Event loop ka kaam hota hai call back queue  and call stack ko check krna


Ascyncrouns Code-  Jo code sidha call stack me nhi jata hai usko bolte hai Asyncromouous code

----Functions running in parallel with other functions are called asynchronous

A good example is JavaScript setTimeout(),promises, eventloop
/----------------------------

Function Experssion / Functin Decleartion

Function Declertion-  function keyword k age likhte hai usko bolte hai function decleration
function Expresiion- jab ham kisi variable m store kr dete hai usko bolte hai function expression

Arrow Function ke help s bhi function expression delcare kr skte hai


Note---------------------------------

The terms parent, child, and sibling are used to describe the relationships. In a node tree, the top node is called the root (or root node) Every node has exactly one parent, except the root (which has no parent) A node can have a number of children. Siblings (brothers or sisters) are nodes with the same parent.
*/
